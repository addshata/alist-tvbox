name: Release Spring Boot Native (AMD64 + ARM64)

on:
  push:
    tags:
      - '*'

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Write tag version to file
        run: |
          echo "${{ github.ref_name }}" > app.version.txt
          cat app.version.txt

      - name: Setup GraalVM
        uses: graalvm/setup-graalvm@v1
        with:
          java-version: '17'
          distribution: 'graalvm'
          components: 'native-image'
          github-token: ${{ secrets.GITHUB_TOKEN }}
          cache: 'maven'

      # Build AMD64 native image (default)
      - name: Build AMD64 native image
        run: |
          mvn -Pnative,standalone native:compile -DskipTests \
              -Dnative.image.cache=true \
              -Dnative.buildtools.build.enabled=true
          mv target/atv target/atv-amd64
          chmod +x target/atv-amd64

      # Build ARM64 native image using cross-compilation
      - name: Build ARM64 native image
        run: |
          # Install cross-compilation dependencies
          sudo apt-get update && sudo apt-get install -y gcc-aarch64-linux-gnu libstdc++-12-dev-arm64-cross

          mvn -Pnative,standalone native:compile -DskipTests \
              -Dnative.image.cache=true \
              -Dnative.buildtools.build.enabled=true \
              -Dnative.buildtools.build.target=linux-aarch_64
          mv target/atv target/atv-arm64
          chmod +x target/atv-arm64

      - name: Package artifacts
        run: |
          cd target
          tar zcvf atv-amd64.tar.gz atv-amd64
          tar zcvf atv-arm64.tar.gz atv-arm64
          ls -lh

      - name: Create release and upload binaries
        uses: softprops/action-gh-release@v2
        with:
          files: |
            target/*.jar
            target/atv-amd64.tar.gz
            target/atv-arm64.tar.gz

      - name: Send version notification
        env:
          API_URL: ${{ secrets.VERSION_API }}
        if: ${{ env.API_URL != '' }}
        run: |
          curl -s "${{ env.API_URL }}?type=app&version=${{ github.ref_name }}"